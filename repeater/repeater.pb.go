// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repeater.proto

package repeater

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RepeatRequest struct {
	Quantity             int64    `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatRequest) Reset()         { *m = RepeatRequest{} }
func (m *RepeatRequest) String() string { return proto.CompactTextString(m) }
func (*RepeatRequest) ProtoMessage()    {}
func (*RepeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_repeater_ce6a4167388b0337, []int{0}
}
func (m *RepeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatRequest.Unmarshal(m, b)
}
func (m *RepeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatRequest.Marshal(b, m, deterministic)
}
func (dst *RepeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatRequest.Merge(dst, src)
}
func (m *RepeatRequest) XXX_Size() int {
	return xxx_messageInfo_RepeatRequest.Size(m)
}
func (m *RepeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatRequest proto.InternalMessageInfo

func (m *RepeatRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *RepeatRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type RepeatResponse struct {
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatResponse) Reset()         { *m = RepeatResponse{} }
func (m *RepeatResponse) String() string { return proto.CompactTextString(m) }
func (*RepeatResponse) ProtoMessage()    {}
func (*RepeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_repeater_ce6a4167388b0337, []int{1}
}
func (m *RepeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatResponse.Unmarshal(m, b)
}
func (m *RepeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatResponse.Marshal(b, m, deterministic)
}
func (dst *RepeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatResponse.Merge(dst, src)
}
func (m *RepeatResponse) XXX_Size() int {
	return xxx_messageInfo_RepeatResponse.Size(m)
}
func (m *RepeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatResponse proto.InternalMessageInfo

func (m *RepeatResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*RepeatRequest)(nil), "RepeatRequest")
	proto.RegisterType((*RepeatResponse)(nil), "RepeatResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepeaterClient is the client API for Repeater service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepeaterClient interface {
	Repeat(ctx context.Context, opts ...grpc.CallOption) (Repeater_RepeatClient, error)
}

type repeaterClient struct {
	cc *grpc.ClientConn
}

func NewRepeaterClient(cc *grpc.ClientConn) RepeaterClient {
	return &repeaterClient{cc}
}

func (c *repeaterClient) Repeat(ctx context.Context, opts ...grpc.CallOption) (Repeater_RepeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Repeater_serviceDesc.Streams[0], "/Repeater/Repeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &repeaterRepeatClient{stream}
	return x, nil
}

type Repeater_RepeatClient interface {
	Send(*RepeatRequest) error
	Recv() (*RepeatResponse, error)
	grpc.ClientStream
}

type repeaterRepeatClient struct {
	grpc.ClientStream
}

func (x *repeaterRepeatClient) Send(m *RepeatRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *repeaterRepeatClient) Recv() (*RepeatResponse, error) {
	m := new(RepeatResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RepeaterServer is the server API for Repeater service.
type RepeaterServer interface {
	Repeat(Repeater_RepeatServer) error
}

func RegisterRepeaterServer(s *grpc.Server, srv RepeaterServer) {
	s.RegisterService(&_Repeater_serviceDesc, srv)
}

func _Repeater_Repeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RepeaterServer).Repeat(&repeaterRepeatServer{stream})
}

type Repeater_RepeatServer interface {
	Send(*RepeatResponse) error
	Recv() (*RepeatRequest, error)
	grpc.ServerStream
}

type repeaterRepeatServer struct {
	grpc.ServerStream
}

func (x *repeaterRepeatServer) Send(m *RepeatResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *repeaterRepeatServer) Recv() (*RepeatRequest, error) {
	m := new(RepeatRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Repeater_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Repeater",
	HandlerType: (*RepeaterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Repeat",
			Handler:       _Repeater_Repeat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "repeater.proto",
}

func init() { proto.RegisterFile("repeater.proto", fileDescriptor_repeater_ce6a4167388b0337) }

var fileDescriptor_repeater_ce6a4167388b0337 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x2d, 0x48,
	0x4d, 0x2c, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe5, 0xe2, 0x0d, 0x02,
	0x8b, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x71, 0x71, 0x14, 0x96, 0x26, 0xe6,
	0x95, 0x64, 0x96, 0x54, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xf9, 0x42, 0x12, 0x5c,
	0xec, 0xc9, 0xf9, 0x79, 0x25, 0xa9, 0x79, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30,
	0xae, 0x92, 0x16, 0x17, 0x1f, 0xcc, 0x98, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0xdc, 0x6a, 0x8d,
	0xac, 0xb9, 0x38, 0x82, 0xa0, 0x8e, 0x10, 0xd2, 0xe7, 0x62, 0x83, 0xb0, 0x85, 0xf8, 0xf4, 0x50,
	0xdc, 0x21, 0xc5, 0xaf, 0x87, 0x6a, 0xa0, 0x12, 0x83, 0x06, 0xa3, 0x01, 0x63, 0x12, 0x1b, 0xd8,
	0xd9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0xca, 0xb3, 0x25, 0xc8, 0x00, 0x00, 0x00,
}
